{
  "version": 3,
  "sources": ["../ts/common.ts"],
  "sourcesContent": ["type TcsTyperUser = {\n    username: string;\n}\n\nexport type TcsTyperSettings = {\n    theme: string,\n    sound: string\n}\n\nexport type UserDetails = {\n    coach: boolean,\n    created_at: string,\n    id: number,\n    full_name: string,\n    password: string,\n    tests: Array<object>,\n    username: string\n}\n\nexport async function fetchUserDetails(username: string): Promise<UserDetails> {\n    console.log(username)\n    let response: UserDetails\n    try {\n        response = await fetch(\"https://tcs-typer.netlify.app/api/user?username=\" + username).then((resp) => resp.json());\n    } catch (e) {\n        throw new Error(\"An error occurred while fetching the user details: \" + e)\n    }\n\n\n    return response\n}\n\nexport function getUser() {\n    try {\n        const storedUser = localStorage.getItem(\"TcsTyper_SavedUser\")\n\n        if (storedUser) {\n            return JSON.parse(localStorage.getItem(\"TcsTyper_SavedUser\") || \"\");\n        } else {\n            // OLD Storage fix:\n            const oldStoredUser = localStorage.getItem(\"username\")\n            if (oldStoredUser) {\n                const newUser = { username: oldStoredUser }\n                setUser(newUser)\n                window.localStorage.removeItem(\"username\")\n                return newUser\n            } else {\n                return null\n            }\n        }\n    } catch {\n        return null\n    }\n}\n\nexport function setUser(newUser: TcsTyperUser): void {\n    localStorage.setItem(\"TcsTyper_SavedUser\", JSON.stringify(newUser));\n}\n\nexport function getSettings(): TcsTyperSettings {\n    const storedSettings = localStorage.getItem(\"TcsTyper_SavedSettings\")\n\n    useSavedSettings: if (storedSettings) {\n        let returning\n        try {\n            returning = JSON.parse(storedSettings);\n        } catch {\n            break useSavedSettings\n        }\n        if (!returning) {\n            break useSavedSettings\n        }\n        if (returning.sound === \"standard-click\") {\n            returning.sound = \"default-click\"\n        }\n        setSettings(returning)\n        return returning\n    }\n\n    const defaultSettings = { theme: \"default-theme\", sound: \"default-click\" }\n\n\n    // OLD Storage fix:\n    const oldStoredTheme = localStorage.getItem(\"theme\")\n    let oldStoredSound = localStorage.getItem(\"sound\")\n    if (oldStoredTheme || oldStoredSound) {\n        let newSettings = defaultSettings\n        if (oldStoredTheme) {\n            newSettings = { ...newSettings, theme: oldStoredTheme }\n            window.localStorage.removeItem(\"theme\")\n        }\n        if (oldStoredSound) {\n            oldStoredSound = oldStoredSound === \"standard-click\" ? \"default-click\" : oldStoredSound\n            newSettings = { ...newSettings, sound: oldStoredSound }\n            window.localStorage.removeItem(\"sound\")\n        }\n        setSettings(newSettings)\n        return newSettings\n    } else {\n        setSettings(defaultSettings)\n        return defaultSettings\n    }\n}\n\nexport function setSettings(newTheme: TcsTyperSettings): void {\n    localStorage.setItem(\"TcsTyper_SavedSettings\", JSON.stringify(newTheme));\n}\n"],
  "mappings": "6oBAmBA,SAAsBA,EAAiBC,EAAwC,QAAAC,EAAA,sBAC3E,QAAQ,IAAID,CAAQ,EACpB,IAAIE,EACJ,GAAI,CACAA,EAAW,MAAM,MAAM,mDAAqDF,CAAQ,EAAE,KAAMG,GAASA,EAAK,KAAK,CAAC,CACpH,OAAS,EAAG,CACR,MAAM,IAAI,MAAM,sDAAwD,CAAC,CAC7E,CAGA,OAAOD,CACX,GAEO,SAASE,GAAU,CACtB,GAAI,CAGA,GAFmB,aAAa,QAAQ,oBAAoB,EAGxD,OAAO,KAAK,MAAM,aAAa,QAAQ,oBAAoB,GAAK,EAAE,EAC/D,CAEH,IAAMC,EAAgB,aAAa,QAAQ,UAAU,EACrD,GAAIA,EAAe,CACf,IAAMC,EAAU,CAAE,SAAUD,CAAc,EAC1C,OAAAE,EAAQD,CAAO,EACf,OAAO,aAAa,WAAW,UAAU,EAClCA,CACX,KACI,QAAO,IAEf,CACJ,OAAQE,EAAA,CACJ,OAAO,IACX,CACJ,CAEO,SAASD,EAAQD,EAA6B,CACjD,aAAa,QAAQ,qBAAsB,KAAK,UAAUA,CAAO,CAAC,CACtE,CAEO,SAASG,GAAgC,CAC5C,IAAMC,EAAiB,aAAa,QAAQ,wBAAwB,EAEpEC,EAAkB,GAAID,EAAgB,CAClC,IAAIE,EACJ,GAAI,CACAA,EAAY,KAAK,MAAMF,CAAc,CACzC,OAAQF,EAAA,CACJ,MAAMG,CACV,CACA,GAAI,CAACC,EACD,MAAMD,EAEV,OAAIC,EAAU,QAAU,mBACpBA,EAAU,MAAQ,iBAEtBC,EAAYD,CAAS,EACdA,CACX,CAEA,IAAME,EAAkB,CAAE,MAAO,gBAAiB,MAAO,eAAgB,EAInEC,EAAiB,aAAa,QAAQ,OAAO,EAC/CC,EAAiB,aAAa,QAAQ,OAAO,EACjD,GAAID,GAAkBC,EAAgB,CAClC,IAAIC,EAAcH,EAClB,OAAIC,IACAE,EAAcC,EAAAC,EAAA,GAAKF,GAAL,CAAkB,MAAOF,CAAe,GACtD,OAAO,aAAa,WAAW,OAAO,GAEtCC,IACAA,EAAiBA,IAAmB,iBAAmB,gBAAkBA,EACzEC,EAAcC,EAAAC,EAAA,GAAKF,GAAL,CAAkB,MAAOD,CAAe,GACtD,OAAO,aAAa,WAAW,OAAO,GAE1CH,EAAYI,CAAW,EAChBA,CACX,KACI,QAAAJ,EAAYC,CAAe,EACpBA,CAEf,CAEO,SAASD,EAAYO,EAAkC,CAC1D,aAAa,QAAQ,yBAA0B,KAAK,UAAUA,CAAQ,CAAC,CAC3E",
  "names": ["fetchUserDetails", "username", "__async", "response", "resp", "getUser", "oldStoredUser", "newUser", "setUser", "e", "getSettings", "storedSettings", "useSavedSettings", "returning", "setSettings", "defaultSettings", "oldStoredTheme", "oldStoredSound", "newSettings", "__spreadProps", "__spreadValues", "newTheme"]
}
