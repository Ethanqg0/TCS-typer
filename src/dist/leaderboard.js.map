{
  "version": 3,
  "sources": ["../ts/leaderboard.ts"],
  "sourcesContent": ["interface User {\n  full_name: string;\n  coach?: boolean;\n  best_test: TestRecord;\n}\n\ninterface TestRecord {\n  wpm: number;\n  accuracy: number;\n}\n\nexport interface BestTest {\n  full_name?: string;\n  wpm: number;\n  accuracy: number;\n  isCoach: boolean;\n}\n\nfunction rankByWPM(tests: Array<BestTest>) {\n  return tests.sort((a, b) => b.wpm - a.wpm);\n}\n\nfunction filterTests(users: Array<User>) {\n  const filteredTests: Array<BestTest> = [];\n\n  for (const user of users) {\n    const test: TestRecord = user.best_test;\n    if (!test) continue;\n    filteredTests.push({\n      full_name: user.full_name,\n      wpm: test.wpm,\n      accuracy: test.accuracy,\n      isCoach: user.coach ?? false,\n    });\n  }\n\n  return filteredTests;\n}\n\n// Make coach, student, and all leaderboards that can be toggled\n(window as any).fetchAndDisplayLeaderboard = async () => {\n  try {\n    const response = await fetch(\n      \"https://tcs-typer.netlify.app/api/leaderboard\"\n    );\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch tests from backend server.\");\n    }\n\n    let tests = await response.json();\n    tests = filterTests(tests);\n\n    const studentTests = rankByWPM(tests.filter((test) => !test.isCoach));\n    const coachTests = rankByWPM(tests.filter((test) => test.isCoach));\n    const allTests = rankByWPM(tests);\n\n    const leaderboard = document.querySelector(\n      \".flex-column\"\n    ) as HTMLDivElement;\n    const studentsLeaderboard = document.getElementById(\n      \"leaderboard-toggle-students\"\n    ) as HTMLButtonElement;\n    const coachesLeaderboard = document.getElementById(\n      \"leaderboard-toggle-coaches\"\n    ) as HTMLButtonElement;\n    const allLeaderboard = document.getElementById(\n      \"leaderboard-toggle-all\"\n    ) as HTMLButtonElement;\n\n    function displayLeaderboard(tests: Array<BestTest>) {\n      leaderboard.innerHTML = \"\";\n\n      for (let i = 0; i < tests.length; i++) {\n        const player = leaderboard.appendChild(document.createElement(\"div\"));\n        player.classList.add(\"leaderboard-player\");\n\n        const name = player.appendChild(document.createElement(\"h3\"));\n        name.innerHTML = tests[i].full_name ?? \"\";\n        if (i === 0) {\n          name.innerHTML += \" \uD83E\uDD47\";\n          name.style.fontWeight = \"600\";\n        } else if (i === 1) {\n          name.innerHTML += \" \uD83E\uDD48\";\n        } else if (i === 2) {\n          name.innerHTML += \" \uD83E\uDD49\";\n        }\n\n        const div = player.appendChild(document.createElement(\"div\"));\n        div.classList.add(\"wpm-accuracy\");\n\n        const wpm = div.appendChild(document.createElement(\"h4\"));\n        wpm.innerHTML = `${tests[i].wpm}`;\n\n        const accuracy = div.appendChild(document.createElement(\"h4\"));\n        accuracy.innerHTML = `${tests[i].accuracy}%`;\n      }\n    }\n\n    studentsLeaderboard.addEventListener(\"click\", () =>\n      displayLeaderboard(studentTests)\n    );\n    coachesLeaderboard.addEventListener(\"click\", () =>\n      displayLeaderboard(coachTests)\n    );\n    allLeaderboard.addEventListener(\"click\", () =>\n      displayLeaderboard(allTests)\n    );\n\n    // Display the all leaderboard by default\n    displayLeaderboard(studentTests);\n  } catch (error) {\n    console.error(\"An error occurred while fetching the leaderboard: \", error);\n  }\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n  // When the page is loaded, fetch and display the leaderboard\n  if ((<any>window).fetchAndDisplayLeaderboard) {\n    (<any>window).fetchAndDisplayLeaderboard();\n  }\n\n  const leaderboardModal = document.getElementById(\n    \"leaderboard-modal\"\n  ) as HTMLDialogElement;\n  const openModal = document.getElementById(\"leaderboard-toggle\");\n  const closeModal = document.getElementById(\"close-modal\");\n\n  openModal?.addEventListener(\"click\", () => {\n    leaderboardModal.showModal();\n  });\n  leaderboardModal?.addEventListener(\"click\", (e) => {\n    if (e.target !== leaderboardModal) return;\n    leaderboardModal.close();\n  });\n  closeModal?.addEventListener(\"click\", () => {\n    leaderboardModal.close();\n  });\n});"],
  "mappings": "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",
  "names": ["rankByWPM", "tests", "a", "b", "filterTests", "users", "_a", "filteredTests", "user", "test", "__async", "displayLeaderboard", "leaderboard", "i", "player", "name", "div", "wpm", "accuracy", "response", "studentTests", "coachTests", "allTests", "studentsLeaderboard", "coachesLeaderboard", "allLeaderboard", "error", "leaderboardModal", "openModal", "closeModal", "e"]
}
