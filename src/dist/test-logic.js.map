{
  "version": 3,
  "sources": ["../ts/common.ts", "../../node_modules/@kurkle/color/dist/color.esm.js", "../../node_modules/chart.js/src/helpers/helpers.core.ts", "../../node_modules/chart.js/src/helpers/helpers.math.ts", "../../node_modules/chart.js/src/helpers/helpers.collection.ts", "../../node_modules/chart.js/src/helpers/helpers.extras.ts", "../../node_modules/chart.js/src/helpers/helpers.easing.ts", "../../node_modules/chart.js/src/helpers/helpers.color.ts", "../../node_modules/chart.js/src/core/core.animations.defaults.js", "../../node_modules/chart.js/src/core/core.layouts.defaults.js", "../../node_modules/chart.js/src/helpers/helpers.intl.ts", "../../node_modules/chart.js/src/core/core.ticks.js", "../../node_modules/chart.js/src/core/core.scale.defaults.js", "../../node_modules/chart.js/src/core/core.defaults.js", "../../node_modules/chart.js/src/helpers/helpers.canvas.ts", "../../node_modules/chart.js/src/helpers/helpers.options.ts", "../../node_modules/chart.js/src/helpers/helpers.config.ts", "../../node_modules/chart.js/src/helpers/helpers.curve.ts", "../../node_modules/chart.js/src/helpers/helpers.dom.ts", "../../node_modules/chart.js/src/helpers/helpers.interpolation.ts", "../../node_modules/chart.js/src/helpers/helpers.rtl.ts", "../../node_modules/chart.js/src/helpers/helpers.segment.js", "../../node_modules/chart.js/src/core/core.animator.js", "../../node_modules/chart.js/src/core/core.animation.js", "../../node_modules/chart.js/src/core/core.animations.js", "../../node_modules/chart.js/src/core/core.datasetController.js", "../../node_modules/chart.js/src/controllers/controller.bar.js", "../../node_modules/chart.js/src/controllers/controller.bubble.js", "../../node_modules/chart.js/src/controllers/controller.doughnut.js", "../../node_modules/chart.js/src/controllers/controller.line.js", "../../node_modules/chart.js/src/controllers/controller.polarArea.js", "../../node_modules/chart.js/src/controllers/controller.pie.js", "../../node_modules/chart.js/src/controllers/controller.radar.js", "../../node_modules/chart.js/src/controllers/controller.scatter.js", "../../node_modules/chart.js/src/core/core.adapters.ts", "../../node_modules/chart.js/src/core/core.interaction.js", "../../node_modules/chart.js/src/core/core.layouts.js", "../../node_modules/chart.js/src/platform/platform.base.js", "../../node_modules/chart.js/src/platform/platform.basic.js", "../../node_modules/chart.js/src/platform/platform.dom.js", "../../node_modules/chart.js/src/platform/index.js", "../../node_modules/chart.js/src/core/core.element.ts", "../../node_modules/chart.js/src/core/core.scale.autoskip.js", "../../node_modules/chart.js/src/core/core.scale.js", "../../node_modules/chart.js/src/core/core.typedRegistry.js", "../../node_modules/chart.js/src/core/core.registry.js", "../../node_modules/chart.js/src/core/core.plugins.js", "../../node_modules/chart.js/src/core/core.config.js", "../../node_modules/chart.js/src/core/core.controller.js", "../../node_modules/chart.js/src/elements/element.arc.ts", "../../node_modules/chart.js/src/elements/element.line.js", "../../node_modules/chart.js/src/elements/element.point.ts", "../../node_modules/chart.js/src/elements/element.bar.js", "../../node_modules/chart.js/src/plugins/plugin.colors.ts", "../../node_modules/chart.js/src/plugins/plugin.decimation.js", "../../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js", "../../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js", "../../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js", "../../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js", "../../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js", "../../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js", "../../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js", "../../node_modules/chart.js/src/plugins/plugin.filler/index.js", "../../node_modules/chart.js/src/plugins/plugin.legend.js", "../../node_modules/chart.js/src/plugins/plugin.title.js", "../../node_modules/chart.js/src/plugins/plugin.subtitle.js", "../../node_modules/chart.js/src/plugins/plugin.tooltip.js", "../../node_modules/chart.js/src/scales/scale.category.js", "../../node_modules/chart.js/src/scales/scale.linearbase.js", "../../node_modules/chart.js/src/scales/scale.linear.js", "../../node_modules/chart.js/src/scales/scale.logarithmic.js", "../../node_modules/chart.js/src/scales/scale.radialLinear.js", "../../node_modules/chart.js/src/scales/scale.time.js", "../../node_modules/chart.js/src/scales/scale.timeseries.js", "../../node_modules/chart.js/src/index.ts", "../../node_modules/chart.js/auto/auto.js", "../ts/test-logic.ts"],
  "sourcesContent": ["type TcsTyperUser = {\n    username: string;\n}\n\nexport type TcsTyperSettings = {\n    theme: string,\n    sound: string\n}\n\nexport type UserDetails = {\n    coach: boolean,\n    created_at: string,\n    id: number,\n    full_name: string,\n    password: string,\n    tests: Array<object>,\n    username: string\n}\n\nexport async function fetchUserDetails(username: string): Promise<UserDetails> {\n    console.log(username)\n    let response: UserDetails\n    try {\n        response = await fetch(\"https://tcs-typer.netlify.app/api/user?username=\" + username).then((resp) => resp.json());\n    } catch (e) {\n        throw new Error(\"An error occurred while fetching the user details: \" + e)\n    }\n\n\n    return response\n}\n\nexport function getUser() {\n    try {\n        const storedUser = localStorage.getItem(\"TcsTyper_SavedUser\")\n\n        if (storedUser) {\n            return JSON.parse(localStorage.getItem(\"TcsTyper_SavedUser\") || \"\");\n        } else {\n            // OLD Storage fix:\n            const oldStoredUser = localStorage.getItem(\"username\")\n            if (oldStoredUser) {\n                const newUser = { username: oldStoredUser }\n                setUser(newUser)\n                window.localStorage.removeItem(\"username\")\n                return newUser\n            } else {\n                return null\n            }\n        }\n    } catch {\n        return null\n    }\n}\n\nexport function setUser(newUser: TcsTyperUser): void {\n    localStorage.setItem(\"TcsTyper_SavedUser\", JSON.stringify(newUser));\n}\n\nexport function getSettings(): TcsTyperSettings {\n    const storedSettings = localStorage.getItem(\"TcsTyper_SavedSettings\")\n\n    useSavedSettings: if (storedSettings) {\n        let returning\n        try {\n            returning = JSON.parse(storedSettings);\n        } catch {\n            break useSavedSettings\n        }\n        if (!returning) {\n            break useSavedSettings\n        }\n        if (returning.sound === \"standard-click\") {\n            returning.sound = \"default-click\"\n        }\n        setSettings(returning)\n        return returning\n    }\n\n    const defaultSettings = { theme: \"default-theme\", sound: \"default-click\" }\n\n\n    // OLD Storage fix:\n    const oldStoredTheme = localStorage.getItem(\"theme\")\n    let oldStoredSound = localStorage.getItem(\"sound\")\n    if (oldStoredTheme || oldStoredSound) {\n        let newSettings = defaultSettings\n        if (oldStoredTheme) {\n            newSettings = { ...newSettings, theme: oldStoredTheme }\n            window.localStorage.removeItem(\"theme\")\n        }\n        if (oldStoredSound) {\n            oldStoredSound = oldStoredSound === \"standard-click\" ? \"default-click\" : oldStoredSound\n            newSettings = { ...newSettings, sound: oldStoredSound }\n            window.localStorage.removeItem(\"sound\")\n        }\n        setSettings(newSettings)\n        return newSettings\n    } else {\n        setSettings(defaultSettings)\n        return defaultSettings\n    }\n}\n\nexport function setSettings(newTheme: TcsTyperSettings): void {\n    localStorage.setItem(\"TcsTyper_SavedSettings\", JSON.stringify(newTheme));\n}\n", "/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n", "/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n", "import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n", "import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n", "import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n", "import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n", "import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n", "const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n", "export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n", "\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n", "import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n", "import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n", "import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n", "import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n", "import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n", "import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n", "import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n", "import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n", "export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n", "import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n", "import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n", "import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n", "import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n", "import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n", "import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n", "/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n", "import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n", "import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n", "\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n", "/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n", "/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n", "import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n", "import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n", "import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n", "import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n", "import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n", "import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n", "import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n", "import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n", "import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n", "import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n", "import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n", "import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n", "import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n", "import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n", "import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n", "import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n", "/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n", "import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n", "import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n", "import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n", "import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n", "import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n", "import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n", "import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n", "import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n", "import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n", "export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n", "import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n", "import { getSettings, getUser, fetchUserDetails } from \"./common\";\nimport { UserDetails } from \"./common\";\nimport { Chart } from \"chart.js/auto\";\n\nfunction shuffleArray(array: Array<string>): Array<string> {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nfunction pad2(number: number): string {\n  return (number < 10 ? \"0\" : \"\") + number;\n}\n\ninterface Stopwatch {\n  timer: NodeJS.Timeout | null;\n  isRunning: boolean;\n  startTime: number;\n  elapsedTime: number;\n  wordsPerMinute: number;\n}\n\ninterface Settings {\n  mode: string;\n}\n\ntype TypingDataChar = {\n  char: string,\n  correct?: boolean,\n  space?: boolean,\n  init?: boolean\n}\n\ntype TypingData = TypingDataChar[][]\n\ninterface TypedData {\n  words: TypingData;\n  originalWords: TypingData;\n  originalChars: string[];\n}\n\ninterface TestContent {\n  stopwatch: Stopwatch;\n  settings: Settings;\n  typingData: TypedData;\n}\n\nfunction isBestTest(wpm: any, accuracy: any) {\n  if (accuracy < 90) {\n    return false;\n  }\n\n  let userTests: any = localStorage.getItem(\"userDetails\")\n  let tests = JSON.parse(userTests).tests;\n\n  if (tests.length === 0) {\n    return false;\n  }\n\n  for ( const test of tests ) {\n    if (test.wpm > wpm && test.accuracy >= accuracy) {\n      return false;\n    }\n  }\n\n  const toast_success = document.querySelector(\".toast-success\") as HTMLElement;\n  toast_success.classList.add(\"show\");\n\n  return true;\n}\n\nfunction isLoggedIn() {\n  let user: any = localStorage.getItem(\"TcsTyper_SavedUser\");\n  user = JSON.parse(user);\n  if (user[\"username\"] === '') {\n    const toast_warning = document.querySelector(\n      \".toast-warning\"\n    ) as HTMLElement;\n    toast_warning.classList.add(\"show\");\n    return true;\n  } else {\n    return false;\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", async function () {\n  const closeToastSuccess = document.querySelector(\"#close-toast-success\") as HTMLElement;\n  closeToastSuccess.addEventListener(\"click\", () => {\n    const toast_success = document.querySelector(\".toast-success\") as HTMLElement;\n    toast_success.classList.remove(\"show\");\n    toast_success.classList.add(\"hide\");\n    setTimeout(() => {\n      toast_success.classList.remove(\"hide\");\n    }, 250);\n  });\n  \n  const closeToastWarning = document.querySelector(\n    \"#close-toast-warning\"\n  ) as HTMLElement;\n  closeToastWarning.addEventListener(\"click\", () => {\n    const toast_success = document.querySelector(\".toast-warning\") as HTMLElement;\n    toast_success.classList.remove(\"show\");\n    toast_success.classList.add(\"hide\");\n    setTimeout(() => {\n      toast_success.classList.remove(\"hide\");\n    }, 250);\n  });\n});\n\n/**\n * Represents a typing test implementation.\n * @implements {Test}\n * Propeties:\n * - textBox: HTMLElement\n * - stopwatchDisplay: HTMLElement\n * - stopwatch: Stopwatch\n * - settings: Settings\n * - typingData: QuoteData\n * - i: number\n * \n * Methods:\n * - startStopwatch(): void\n * - updateTime(): void\n * - displayTime(time: number): void\n * - resetStopwatch(): void\n * - stopStopwatch(): void\n * - calculateWPM(time: number): number\n * - calculateAccuracy(): number\n * - initializeTest(): Promise<void>\n * - generateQuote(): Promise<string>\n */\nclass TypingTest implements TestContent {\n  /**\n   * The HTML element representing the text input box where the quote is displayed.\n   * @type {HTMLElement}\n   */\n  testContainer: HTMLElement;\n  textBox: HTMLElement;\n  testCaret: HTMLElement;\n\n  restartButton: HTMLElement;\n\n  /**\n   * The HTML element displaying the stopwatch time.\n   * @type {HTMLElement}\n   */\n  stopwatchDisplay: HTMLElement;\n\n  /**\n   * The stopwatch object used for timing the test.\n   * @type {Stopwatch}\n   */\n  stopwatch: Stopwatch;\n\n  /**\n   * The settings object defining test configurations.\n   * @type {Settings}\n   */\n  settings: Settings;\n\n  /**\n   * The quote data object containing test text information.\n   * @type {TypedData}\n   */\n  typingData: TypedData;\n\n  /**\n   * Keeps track of the current character index.\n   * @type {number}\n   */\n  wordIndex: number = 0;\n  /**\n   * Keeps track of the current character index.\n   * @type {number}\n   */\n  charIndex: number = 0;\n\n  minutes: number = 0;\n  seconds: number = 0;\n  milliseconds: number = 0;\n\n  /**\n   * Constructs a new TypingTest instance.\n   * @param {string} id - The ID of the text input box.\n   * @param {string} stopwatchId - The ID of the stopwatch display element.\n   */\n  constructor(id: string, stopwatchId: string, restartButtonId: string) {\n    this.testContainer = document.querySelector(`#${id}`) as HTMLDivElement;\n\n    this.textBox = document.createElement(\"div\") as HTMLDivElement;\n    this.testContainer.appendChild(this.textBox);\n    this.textBox.className = \"test-textbox\"\n\n    this.testCaret = document.createElement(\"div\") as HTMLDivElement;\n    this.testContainer.appendChild(this.testCaret);\n    this.testCaret.className = \"test-caret\"\n\n    window.addEventListener(\"resize\", () => {\n      this.moveCaret()\n    })\n\n    this.stopwatchDisplay = document.querySelector(\n      `#${stopwatchId}`\n    ) as HTMLElement;\n    this.restartButton = document.querySelector(\n      `#${restartButtonId}`\n    ) as HTMLElement;\n\n    this.stopwatch = {\n      timer: null,\n      isRunning: false,\n      startTime: 0,\n      elapsedTime: 0,\n      wordsPerMinute: 0,\n    };\n\n    this.settings = {\n      mode: \"words\",\n    };\n\n    this.typingData = {\n      words: [],\n      originalWords: [],\n      originalChars: [\"\"],\n    };\n  }\n\n  playClick(): void {\n    updateSoundPath();\n\n    const audio = new Audio(soundPath);\n    audio.volume = soundVolume;\n    audio.play().catch((error) => console.error(error));\n  }\n\n  /**\n   * Starts the stopwatch timer.\n   */\n  startStopwatch(): void {\n    if (!this.stopwatch.isRunning) {\n      this.stopwatch.startTime = Date.now() - this.stopwatch.elapsedTime;\n      this.stopwatch.timer = setInterval(() => {\n        this.updateTime();\n      }, 10);\n      this.stopwatch.isRunning = true;\n    }\n  }\n\n  /**\n   * Updates the elapsed time on the stopwatch display.\n   */\n  updateTime(): void {\n    if (this.stopwatch.isRunning) {\n      const now = Date.now();\n      this.stopwatch.elapsedTime = now - this.stopwatch.startTime;\n      this.displayTime(this.stopwatch.elapsedTime);\n    }\n  }\n\n  /**\n   * Displays the formatted time on the stopwatch display element.\n   * @param {number} time - The elapsed time in milliseconds.\n   */\n  displayTime(time: number): void {\n    this.minutes = Math.floor(time / 60000);\n    this.seconds = Math.floor((time % 60000) / 1000);\n    this.milliseconds = Math.floor(time % 1000);\n\n    const formattedTime = `${pad2(this.minutes)}:${pad2(this.seconds)}:${pad2(\n      this.milliseconds\n    )}`;\n\n    this.stopwatchDisplay.textContent = formattedTime;\n  }\n\n  calculateWPM(time: number): number {\n    this.minutes = Math.floor(time / 60000);\n    this.seconds = Math.floor((time % 60000) / 1000);\n    this.milliseconds = Math.floor(time % 1000);\n\n    const totalSeconds =\n      this.minutes * 60 + this.seconds + this.milliseconds / 1000;\n    const wpm = totalSeconds !== 0 ? Math.round((60 / totalSeconds) * 10) : 0;\n\n    return wpm;\n  }\n\n  calculateAccuracy(): number {\n    // console.log(this.typingData);\n    let correctChars = 0;\n    let totalTypedChars = 0;\n    let missingChars = 0;\n\n    for (let i = 0; i < this.typingData.originalWords.length; i++) {\n      const originalWordLength = this.typingData.originalWords[i].length;\n      const typedWord = this.typingData.words[i] || [];\n\n      for (let j = 0; j < originalWordLength; j++) {\n        const originalLetter = this.typingData.originalWords[i][j];\n        const typedLetter = typedWord[j];\n\n        if (!typedLetter) {\n          if (!originalLetter.space && !originalLetter.init) {\n            missingChars++;\n          }\n          continue;\n        }\n\n        if (typedLetter.space || typedLetter.init) {\n          continue;\n        }\n\n        totalTypedChars++;\n\n        if (typedLetter.correct) {\n          correctChars++;\n        }\n      }\n\n      if (typedWord.length > originalWordLength) {\n        totalTypedChars += (typedWord.length - originalWordLength);\n      }\n    }\n\n    // const totalErrors = totalTypedChars + missingChars - correctChars;\n    const totalChars = totalTypedChars + missingChars;\n\n    return totalChars === 0 ? 0 : Math.round((correctChars / totalChars) * 100);\n  }\n\n  /**\n   * Resets the stopwatch timer.\n   */\n  resetStopwatch(): void {\n    this.stopwatch.elapsedTime = 0;\n    this.stopStopwatch()\n  }\n\n  /**\n   * Stops the stopwatch and displays the elapsed time.\n   */\n  stopStopwatch(): void {\n    if (this.stopwatch.timer) {\n      clearInterval(this.stopwatch.timer);\n    }\n    this.stopwatch.isRunning = false;\n    this.displayTime(this.stopwatch.elapsedTime);\n  }\n\n  /**\n   * Initializes the typing test by fetching and setting up the test text.\n   * @returns {Promise<void>} A Promise that resolves when the test is initialized.\n   */\n  async initializeTest(): Promise<void> {\n    const quotes = await this.generateWords();\n    this.typingData.originalChars = quotes.split(\"\");\n    this.typingData.originalWords = (quotes.split(\" \").map((word: string, wordInd: number) => {\n      let out: TypingDataChar[] = word.split(\"\").map((character: string) => { return { char: character } })\n      out = [...(wordInd > 0 ? [{ char: \" \", space: true }] : [{ char: \"\", init: true }]), ...out];\n      return out\n    }) as TypingData);\n    this.typingData.words = new Array(this.typingData.originalWords.length);\n    for (let i = 0; i < this.typingData.originalWords.length; this.typingData.words[i++] = []);\n    this.typingData.words[0][0] = { char: \"\", init: true }\n    this.updateTextBox()\n    this.moveCaret()\n    // console.error(\"Test chars: \", this.typingData.originalWords);\n  }\n\n  async restartTest(): Promise<void> {\n    this.resetStopwatch();\n    this.charIndex = 0;\n    this.wordIndex = 0;\n    this.initializeTest()\n  }\n\n  async updateTextBox(): Promise<void> {\n    // console.log(\"FOR:\", this.wordIndex, this.charIndex)\n    // console.dir(this.typingData.words)\n    // console.dir(this.typingData.originalWords)\n    let newTextBoxHTML = \"\"\n\n    for (let i = 0; i < this.typingData.originalWords.length; i++) {\n      for (let j = 0; j < this.typingData.originalWords[i].length; j++) {\n        const originalLetter = this.typingData.originalWords[i][j];\n        const typedLetter = this.typingData.words[i]?.[j];\n\n        if (typedLetter) {\n          newTextBoxHTML += `<span class=\"test-char test-char-${typedLetter.space ? \"space\" : typedLetter.correct ? \"correct\" : \"incorrect\"} test-char-${i}-${j}\">${originalLetter.char}</span>`;\n        } else if (originalLetter) {\n          newTextBoxHTML += `<span class=\"test-char test-char-placeholder test-char-${originalLetter.space ? \"space\" : \"\"}\">${originalLetter.char}</span>`;\n        }\n      }\n\n      // If the typed word is longer than the original word\n      if (this.typingData.words[i] && this.typingData.words[i].length > this.typingData.originalWords[i].length) {\n        for (let k = this.typingData.originalWords[i].length; k < this.typingData.words[i].length; k++) {\n          const typedLetter = this.typingData.words[i][k];\n          newTextBoxHTML += `<span class=\"test-char test-char-${typedLetter.space ? \"space\" : typedLetter.correct ? \"correct\" : \"incorrect\"} test-char-${i}-${k}\">${typedLetter.char}</span>`;\n        }\n      }\n    }\n\n    // Add the original characters at the end\n    // newTextBoxHTML += \"<br>\" + this.typingData.originalChars.join(\"\");\n    this.textBox.innerHTML = newTextBoxHTML\n    // this.textBox.innerHTML = this.typingData.words.map((word, wordInd) => { return word.map((letter, letterInd) => { return `<span class=\"test-char test-char-${letter.space ? \"space\" : letter.correct ? \"correct\" : \"incorrect\"} test-char-${wordInd}-${letterInd}\">${letter.char}</span>` }).join(\"\") }).join(\"\") + \"<br>\" + this.typingData.originalChars.join(\"\");\n  }\n\n  /**\n   * Fetches a random quote from an external data source.\n   * @returns {Promise<string>} A Promise that resolves with the fetched quote text.\n   */\n  async generateQuote(): Promise<string> {\n    const cacheName = \"quote-cache\";\n    const url = \"/assets/data/quotes.json\";\n\n    try {\n      let response;\n      const cache = await caches.open(cacheName);\n      const cachedResponse = await cache.match(url);\n\n      if (cachedResponse) {\n        console.log(\"FETCHED FROM CACHE\");\n        response = cachedResponse;\n      } else {\n        console.log(\"FETCHED FROM SERVER\");\n        response = await fetch(url);\n        if (response.ok) {\n          cache.put(url, response.clone());\n        } else {\n          throw new Error(\"Failed to fetch quote data. HTTP Status: \" + response.status);\n        }\n      }\n\n      const data = await response.json();\n      if (!Array.isArray(data) || data.length === 0) {\n        throw new Error(\n          \"Invalid quote data format: Quotes array is empty or not an array\"\n        );\n      }\n\n      const randomIndex = Math.floor(Math.random() * data.length);\n      const randomQuote = data[randomIndex];\n\n      if (!randomQuote || !randomQuote.text) {\n        throw new Error(\"Invalid quote data: Missing text in the quote object\");\n      }\n\n      return randomQuote.text;\n    } catch (error) {\n      console.error(\"Error fetching or processing quote data:\", error);\n      throw new Error(\"Failed to fetch or process quote data\");\n    }\n  }\n\n  /**\n   * Generates a shuffled quote by fetching words from a text file and shuffling them.\n   * @returns A promise that resolves to a string representing the shuffled quote.\n   * @throws An error if there is an issue fetching or processing the word data.\n   */\n  async generateWords(): Promise<string> {\n    const cacheName = \"words-cache\";\n    const url = \"/assets/data/words.txt\";\n\n    try {\n      let response;\n      const cache = await caches.open(cacheName);\n      const cachedResponse = await cache.match(url);\n\n      if (cachedResponse) {\n        console.log(\"FETCHED FROM CACHE\");\n        response = cachedResponse;\n      } else {\n        console.log(\"FETCHED FROM SERVER\");\n        response = await fetch(url);\n        if (response.ok) {\n          cache.put(url, response.clone());\n        } else {\n          throw new Error(\n            \"Failed to fetch quote data. HTTP Status: \" + response.status\n          );\n        }\n      }\n      const data = await response.text();\n\n      // Split the data into an array of words (assuming words are separated by spaces or new lines)\n      let wordsArray = data.split(/\\s+/);\n\n      // Shuffle the array of words\n      wordsArray = shuffleArray(wordsArray);\n\n      // Take the first 20 words from the shuffled array\n      const first10Words = wordsArray.slice(0, 10);\n\n      // Join the first 20 shuffled words back into a string\n      const shuffledQuote = first10Words.join(\" \");\n\n      return shuffledQuote;\n    } catch (error) {\n      console.error(\"Error fetching or processing word data:\", error);\n      throw new Error(\"Failed to fetch or process word data\");\n    }\n  }\n\n  moveCaret(): void {\n    this.testCaret.style.display = \"block\"\n    const lastTypedRect = (this.textBox.querySelector(`.test-char-${this.wordIndex}-${this.charIndex}`) as HTMLSpanElement)?.getBoundingClientRect()\n    const testContainerComputedStyles = window.getComputedStyle(this.testContainer, null);\n    const testContainerPaddingLeft = parseInt(testContainerComputedStyles.getPropertyValue(\"padding-left\"), 10);\n    const testContainerPaddingTop = parseInt(testContainerComputedStyles.getPropertyValue(\"padding-top\"), 10);\n\n    if (lastTypedRect) {\n      this.testCaret.style.left = lastTypedRect.x - this.textBox.getBoundingClientRect().x + testContainerPaddingLeft + lastTypedRect.width + \"px\"\n      this.testCaret.style.top = lastTypedRect.y - this.textBox.getBoundingClientRect().y + testContainerPaddingTop + \"px\"\n    } else {\n      this.testCaret.style.left = testContainerPaddingLeft + \"px\"\n      this.testCaret.style.top = testContainerPaddingTop + \"px\"\n    }\n    this.testCaret.style.animationName = this.wordIndex === 0 && this.charIndex === 0 ? \"caretAnim\" : \"none\"\n    // console.log(lastTypedRect.x, this.textBox.getBoundingClientRect().x, testContainerPaddingLeft, lastTypedRect.width, lastTypedRect.x - this.textBox.getBoundingClientRect().x + testContainerPaddingLeft + lastTypedRect.width)\n  }\n\n  hideCaret(): void {\n    this.testCaret.style.display = \"none\"\n  }\n}\n\n// Define a type for the test configuration\ntype TestConfig = {\n  id: string;\n  elementId: string;\n  stopwatchId: string;\n  restartButtonId: string;\n};\n\n// Define a mapping of pathname to test configuration\nconst pathToTestMap: Record<string, TestConfig> = {\n  \"/\": {\n    id: \"test1\",\n    elementId: \"test-1\",\n    stopwatchId: \"stopwatch-1\",\n    restartButtonId: \"restart-button-1\",\n  }\n};\n\nlet soundPath: string = \"/assets/sounds/standard-click.wav\";\nconst soundVolume: number = 1.0;\n\nfunction updateSoundPath() {\n  const currentSound = getSettings().sound;\n\n  soundPath = `/assets/sounds/${currentSound}.wav`;\n}\n\nasync function sendResultsToDatabase(test: TypingTest) {\n  const username = getUser()?.username\n  const wpm: number = test.calculateWPM(test.stopwatch.elapsedTime);\n  const accuracy: number = test.calculateAccuracy();\n\n  if (!username || username === \"\") {\n    console.log(\"User is not logged in, skipping sending test results to the database.\");\n    return;\n  }\n\n  await fetch(\n    \"https://tcs-typer.netlify.app/api/test\",\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        wpm: wpm,\n        accuracy: accuracy,\n      }),\n    }\n  ).then(() => {\n    if ((<any>window).fetchAndDisplayLeaderboard) {\n      (<any>window).fetchAndDisplayLeaderboard()\n    }\n  }).catch((e) => {\n    console.error(\"Failed to send test results to the database:\", e);\n  });\n}\n\n// Fetch Request: Via database fetch; should only be used when the page is initially loaded\nasync function storeUserDetails() {\n  const userDetails: UserDetails = await fetchUserDetails(getUser()?.username);\n  localStorage.setItem(\"userDetails\", JSON.stringify(userDetails));\n}\n\n// Not Fetch Request: Via localStorage, avoids unnecessary fetch requests\nfunction updateUserDetails(test: TypingTest) {\n  const localUserDetails: string | null = localStorage.getItem(\"userDetails\");\n  if ( !localUserDetails ) {\n    console.error(\"User details not found in localStorage\");\n    return;\n  }\n  const userDetails: UserDetails = JSON.parse(localUserDetails);\n  const wpm: number = test.calculateWPM(test.stopwatch.elapsedTime);\n  const accuracy: number = test.calculateAccuracy();\n  userDetails?.tests.push({\"wpm\": wpm, \"accuracy\": accuracy});\n  localStorage.setItem(\"userDetails\", JSON.stringify(userDetails));\n  return;\n}\n\nlet userGraphChart: any | null = null;\n\nasync function displayStats(test: TypingTest) {\n  const graph = document.getElementById(\"stats-modal\") as HTMLDialogElement;\n  const wpm = document.getElementById(\"stats-wpm\") as HTMLParagraphElement;\n  const accuracy = document.getElementById(\"stats-accuracy\") as HTMLParagraphElement;\n  const wpm_last_ten = document.getElementById(\"stats-wpm-last-ten\") as HTMLParagraphElement;\n  const accuracy_last_ten = document.getElementById(\"stats-accuracy-last-ten\") as HTMLParagraphElement;\n\n  // TODO: Move this to test initialization\n  const user = getUser()\n  let tests = await(await fetchUserDetails(user.username)).tests as unknown as Array<{wpm: number, accuracy: number}>\n  \n  tests = tests.filter((test) => test.accuracy > 90);\n\n  const last_10_tests = tests.slice(-10)\n\n  let sum_words: number = 0;\n  let sum_accuracy: number = 0;\n\n  for (const test of last_10_tests) {\n    sum_words += test.wpm / 10\n    sum_accuracy += test.accuracy / 10\n  }\n\n  let all_sum_words: number = 0;\n  let all_sum_accuracy: number = 0;\n\n  for (const test of tests) {\n    all_sum_words += test.wpm / tests.length\n    all_sum_accuracy += test.accuracy / tests.length\n  }\n\n  sum_words = Math.round(sum_words)\n  sum_accuracy = Math.round(sum_accuracy)\n\n  wpm_last_ten.innerText = sum_words.toString()\n  accuracy_last_ten.innerText = sum_accuracy.toString() + \"%\"\n\n  const ctx = document.getElementById(\"user-graph\") as HTMLCanvasElement;\n\n  if (userGraphChart) {\n    userGraphChart.destroy()\n    userGraphChart = null\n  }\n\n  userGraphChart = new Chart(ctx, {\n    type: \"bar\",\n    data: {\n      labels: [\"Current WPM\", \"Last 10 WPM\", \"All-Time WPM\"],\n      datasets: [\n        {\n          label: \"Words Per Minute\",\n          data: [test.calculateWPM(test.stopwatch.elapsedTime).toString(), sum_words, all_sum_words],\n          backgroundColor: [\n            \"skyblue\",\n            \"dodgerblue\",\n            \"blue\",\n          ],\n        },\n      ],\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  });\n\n  if (graph) {\n    graph.showModal();\n    wpm.innerText = test.calculateWPM(test.stopwatch.elapsedTime).toString();\n    accuracy.innerText = test.calculateAccuracy().toString() + \"%\"\n  }\n\n  // use test here\n\n  graph.addEventListener(\"click\", () => {\n    graph.close();\n  });\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  const justRegistered = localStorage.getItem(\"justRegistered\");\n  const introductionModal = document.querySelector(\"#introduction-modal\") as HTMLDialogElement;\n  const closeModal = document.querySelector(\"#close-modal-introduction\") as HTMLButtonElement;\n  const startTyping = document.querySelector(\"#start-typing\") as HTMLButtonElement;\n\n  if (justRegistered) {\n    introductionModal.showModal();\n    localStorage.removeItem(\"justRegistered\");\n  }\n\n  closeModal.addEventListener(\"click\", () => {\n    introductionModal.close();\n  });\n\n  startTyping.addEventListener(\"click\", () => {\n    introductionModal.close();\n  });\n});\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n  (async function() {\n    storeUserDetails();\n  })();\n\n  console.log(\"Why are you in the console? Are you trying to cheat?\")\n\n  updateSoundPath();\n  const testBody = document.querySelector(\"body#test\")\n\n  if (!testBody) return\n  // Get the test configuration based on the current pathname\n  const currentTestConfig = pathToTestMap[window.location.pathname];\n\n  if (!currentTestConfig) {\n    console.error(\"Test not found for current pathname\");\n    return;\n  }\n\n  // Destructure the test configuration\n  const { elementId, stopwatchId, restartButtonId } = currentTestConfig;\n\n  // Create a TypingTest instance for the current test\n  const currentTest = new TypingTest(elementId, stopwatchId, restartButtonId);\n  currentTest.initializeTest();\n\n  currentTest.restartButton.addEventListener(\"click\", async () => {\n    await currentTest.restartTest();\n  });\n\n  // Add event listener for keydown events\n  document.addEventListener(\"keydown\", function (event) {\n    if (event.key === \"Enter\") {\n      currentTest.restartTest()\n      return\n    }\n    if (currentTest.wordIndex >= currentTest.typingData.originalWords.length) {\n      return\n    }\n    if (event.getModifierState(\"CapsLock\")) {\n      alert(\"Caps Lock is on. This may affect your typing accuracy.\");\n    }\n\n    if (event.key === \"Backspace\" || event.key === \"Delete\") {\n      if (currentTest.wordIndex > 0 || currentTest.charIndex > 0) {\n        // console.log(currentTest.typingData.words[currentTest.wordIndex][currentTest.typingData.words[currentTest.wordIndex].length - 1])\n        currentTest.charIndex--;\n        if (currentTest.charIndex < 0) {\n          currentTest.wordIndex--;\n          currentTest.charIndex = currentTest.typingData.words[currentTest.wordIndex].length - 1\n        } else {\n\n          currentTest.typingData.words[currentTest.wordIndex].splice(currentTest.charIndex + 1, 1)\n        }\n        // Update the display\n        currentTest.updateTextBox()\n        currentTest.moveCaret()\n        currentTest.playClick()\n      }\n      return; // Prevent further processing for backspace/delete\n    }\n\n    if (event.ctrlKey || event.altKey || event.metaKey || !/^[a-zA-Z.,' ]$/.test(event.key)) {\n      return;\n    }\n\n    if (event.key === \" \") {\n      if (currentTest.charIndex > 0) {\n        currentTest.wordIndex++;\n        currentTest.charIndex = 0;\n        if (currentTest.wordIndex < currentTest.typingData.originalWords.length) {\n          currentTest.typingData.words[currentTest.wordIndex][currentTest.charIndex] = { char: event.key, space: true };\n        }\n      } else {\n        return\n      }\n    } else {\n      if (currentTest.wordIndex === 0 && currentTest.charIndex === 0) {\n        currentTest.startStopwatch();\n      }\n      if (currentTest.charIndex > currentTest.typingData.originalWords[currentTest.wordIndex].length + 10) {\n        return\n      }\n      currentTest.charIndex++;\n      // console.log(currentTest.typingData.originalWords[currentTest.wordIndex][currentTest.charIndex], currentTest.typingData.originalWords[currentTest.wordIndex])\n      currentTest.typingData.words[currentTest.wordIndex][currentTest.charIndex] = { char: event.key, correct: event.key === currentTest.typingData.originalWords[currentTest.wordIndex][currentTest.charIndex]?.char };\n      // `<span class=\"test-char ${event.key === currentTest.typingData.originalChars[currentTest.i] ? \"test-char-correct\" : \"test-char-incorrect\"}\" style=\"color: ${event.key === currentTest.typingData.originalChars[currentTest.i] ? \"green\" : \"red\"};\">` + currentTest.typingData.originalChars[currentTest.i] + \"</span>\";\n    }\n    currentTest.updateTextBox()\n\n    currentTest.moveCaret()\n\n    currentTest.playClick()\n\n    // End of test\n    if (currentTest.wordIndex > currentTest.typingData.originalWords.length - 1 || (currentTest.wordIndex === currentTest.typingData.originalWords.length - 1 && currentTest.charIndex >= currentTest.typingData.originalWords[currentTest.wordIndex].length - 1)) {\n      currentTest.wordIndex++;\n      currentTest.stopStopwatch();\n      let wpm = currentTest.calculateWPM(currentTest.stopwatch.elapsedTime);\n      let accuracy = currentTest.calculateAccuracy();\n      displayStats(currentTest);\n      currentTest.textBox.innerHTML = wpm + \" words per minute with \" + accuracy + \"% accuracy!\";\n      currentTest.hideCaret()\n      isLoggedIn();\n      sendResultsToDatabase(currentTest); // async\n      updateUserDetails(currentTest); // sync, does not rely on sendResultsDatabase\n      isBestTest(wpm, accuracy);\n    }\n  });\n});"],
  "mappings": "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",
  "names": ["fetchUserDetails", "username", "__async", "response", "resp", "getUser", "oldStoredUser", "newUser", "setUser", "e", "getSettings", "storedSettings", "useSavedSettings", "returning", "setSettings", "defaultSettings", "oldStoredTheme", "oldStoredSound", "newSettings", "__spreadProps", "__spreadValues", "newTheme", "init_common", "__esmMin", "round", "v", "p2b", "lim", "n2b", "b2n", "n2p", "hexParse", "str", "len", "ret", "map$1", "hexString", "f", "isShort", "h1", "h2", "alpha", "hsl2rgbn", "h", "s", "l", "a", "n", "k", "hsv2rgbn", "hwb2rgbn", "w", "b", "rgb", "i", "hueValue", "r", "g", "d", "max", "rgb2hsl", "min", "calln", "c", "hsl2rgb", "hwb2rgb", "hsv2rgb", "hue", "hueParse", "m", "HUE_RE", "p1", "p2", "rotate", "deg", "hslString", "unpack", "unpacked", "keys", "names$1", "tkeys", "map", "j", "ok", "nk", "nameParse", "names", "rgbParse", "RGB_RE", "rgbString", "interpolate", "rgb1", "rgb2", "t", "from", "to", "modHSL", "ratio", "tmp", "clone", "proto", "fromObject", "input", "functionParse", "hex", "eq", "Color", "init_color_esm", "__esmMin", "_Color", "type", "obj", "color", "weight", "c1", "c2", "w2", "p", "w1", "val", "noop", "isNullOrUndef", "value", "isArray", "Array", "type", "Object", "prototype", "toString", "call", "slice", "isObject", "isNumberFinite", "Number", "isFinite", "finiteOrDefault", "defaultValue", "valueOrDefault", "callback", "fn", "args", "thisArg", "apply", "each", "loopable", "reverse", "i", "len", "keys", "length", "_elementsEqual", "a0", "a1", "ilen", "v0", "v1", "datasetIndex", "index", "clone", "source", "map", "target", "create", "klen", "k", "isValidKey", "key", "indexOf", "_merger", "options", "tval", "sval", "merge", "sources", "merger", "current", "mergeIf", "_mergerIf", "hasOwnProperty", "_splitKey", "parts", "split", "tmp", "part", "endsWith", "push", "_getKeyResolver", "obj", "resolveObjectKey", "keyResolvers", "_capitalize", "str", "charAt", "toUpperCase", "_isClickEvent", "e", "almostEquals", "x", "y", "epsilon", "Math", "abs", "niceNum", "range", "roundedRange", "round", "niceRange", "pow", "floor", "log10", "fraction", "_factorize", "result", "sqrt", "sort", "a", "b", "pop", "isNumber", "n", "isNaN", "parseFloat", "almostWhole", "rounded", "_setMinAndMaxByKey", "array", "property", "min", "max", "toRadians", "degrees", "PI", "toDegrees", "radians", "_decimalPlaces", "isFiniteNumber", "p", "getAngleFromPoint", "centrePoint", "anglePoint", "distanceFromXCenter", "distanceFromYCenter", "radialDistanceFromCenter", "angle", "atan2", "TAU", "distance", "distanceBetweenPoints", "pt1", "pt2", "_angleDiff", "PITAU", "_normalizeAngle", "_angleBetween", "start", "end", "sameAngleIsFullCircle", "s", "angleToStart", "angleToEnd", "startToAngle", "endToAngle", "_limitValue", "_int16Range", "_isBetween", "_lookup", "table", "cmp", "hi", "lo", "mid", "_filterBetween", "values", "listenArrayEvents", "listener", "_chartjs", "listeners", "defineProperty", "configurable", "enumerable", "arrayEvents", "forEach", "method", "base", "res", "object", "unlistenArrayEvents", "stub", "splice", "_arrayUnique", "items", "set", "Set", "size", "from", "throttled", "argsToUse", "ticking", "requestAnimFrame", "window", "debounce", "delay", "timeout", "clearTimeout", "setTimeout", "_getStartAndCountOfVisiblePoints", "meta", "points", "animationsDisabled", "pointCount", "count", "_sorted", "iScale", "_parsed", "axis", "minDefined", "maxDefined", "getUserBounds", "_lookupByKey", "getPixelForValue", "_scaleRangesChanged", "xScale", "yScale", "_scaleRanges", "newRanges", "xmin", "xmax", "ymin", "ymax", "changed", "assign", "isPatternOrGradient", "color", "Color", "getHoverColor", "saturate", "darken", "hexString", "applyAnimationsDefaults", "defaults", "undefined", "duration", "easing", "loop", "to", "describe", "_fallback", "_indexable", "_scriptable", "name", "colors", "properties", "numbers", "active", "animation", "resize", "show", "animations", "visible", "hide", "v", "applyLayoutsDefaults", "autoPadding", "padding", "top", "right", "bottom", "left", "getNumberFormat", "locale", "cacheKey", "JSON", "stringify", "formatter", "intlCache", "get", "Intl", "NumberFormat", "formatNumber", "num", "format", "calculateDelta", "tickValue", "ticks", "delta", "applyScaleDefaults", "display", "offset", "beginAtZero", "bounds", "clip", "grace", "grid", "lineWidth", "drawOnChartArea", "drawTicks", "tickLength", "tickWidth", "_ctx", "tickColor", "border", "dash", "dashOffset", "width", "title", "text", "minRotation", "maxRotation", "mirror", "textStrokeWidth", "textStrokeColor", "autoSkip", "autoSkipPadding", "labelOffset", "Ticks", "formatters", "minor", "major", "align", "crossAlign", "showLabelBackdrop", "backdropColor", "backdropPadding", "route", "startsWith", "getScope", "node", "root", "scope", "toFontString", "font", "family", "style", "weight", "_measureText", "ctx", "data", "gc", "longest", "string", "textWidth", "measureText", "_longestText", "arrayOfThings", "cache", "garbageCollect", "save", "j", "jlen", "thing", "nestedThing", "restore", "gcLen", "_alignPixel", "chart", "pixel", "devicePixelRatio", "currentDevicePixelRatio", "halfWidth", "clearCanvas", "canvas", "getContext", "resetTransform", "clearRect", "height", "drawPoint", "drawPointLegend", "w", "xOffset", "yOffset", "cornerRadius", "xOffsetW", "yOffsetW", "pointStyle", "rotation", "radius", "rad", "RAD_PER_DEG", "translate", "rotate", "drawImage", "beginPath", "ellipse", "arc", "closePath", "moveTo", "sin", "cos", "TWO_THIRDS_PI", "lineTo", "QUARTER_PI", "HALF_PI", "SQRT1_2", "rect", "fill", "borderWidth", "stroke", "_isPointInArea", "point", "area", "margin", "clipArea", "unclipArea", "_steppedLineTo", "previous", "flip", "mode", "midpoint", "_bezierCurveTo", "bezierCurveTo", "cp1x", "cp2x", "cp1y", "cp2y", "setRenderOpts", "opts", "translation", "fillStyle", "textAlign", "textBaseline", "decorateText", "line", "strikethrough", "underline", "metrics", "actualBoundingBoxLeft", "actualBoundingBoxRight", "actualBoundingBoxAscent", "actualBoundingBoxDescent", "yDecoration", "strokeStyle", "decorationWidth", "drawBackdrop", "oldColor", "fillRect", "renderText", "lines", "strokeWidth", "strokeColor", "backdrop", "strokeText", "maxWidth", "fillText", "lineHeight", "addRoundedRectPath", "h", "topLeft", "bottomLeft", "bottomRight", "topRight", "toLineHeight", "matches", "match", "LINE_HEIGHT", "_readValueToProps", "props", "ret", "objProps", "read", "prop", "numberOrZero", "toTRBL", "toTRBLCorners", "toPadding", "toFont", "fallback", "parseInt", "FONT_STYLE", "console", "warn", "resolve", "inputs", "context", "info", "cacheable", "_addGrace", "minmax", "change", "toDimension", "keepZero", "add", "createContext", "parentContext", "_createResolver", "scopes", "prefixes", "rootScopes", "getTarget", "finalRootScopes", "_resolve", "Symbol", "toStringTag", "_cacheable", "_scopes", "_rootScopes", "_getTarget", "override", "Proxy", "deleteProperty", "_keys", "_cached", "_resolveWithPrefixes", "getOwnPropertyDescriptor", "Reflect", "getPrototypeOf", "has", "getKeysFromAllScopes", "includes", "ownKeys", "storage", "_storage", "_attachContext", "proxy", "subProxy", "descriptorDefaults", "_proxy", "_context", "_subProxy", "_stack", "_descriptors", "setContext", "receiver", "_resolveWithContext", "allKeys", "scriptable", "indexable", "_allKeys", "isScriptable", "isFunction", "isIndexable", "descriptors", "_resolveScriptable", "_resolveArray", "needsSubResolver", "getValue", "Error", "join", "delete", "createSubResolver", "arr", "filter", "item", "resolver", "resolveFallback", "addScopes", "parentScopes", "parentFallback", "parent", "allScopes", "addScopesFromKey", "subGetTarget", "prefix", "readKey", "resolveKeysFromAllScopes", "_parseObjectDataRadialScale", "_parsing", "parsed", "r", "parse", "splineCurve", "firstPoint", "middlePoint", "afterPoint", "t", "skip", "next", "d01", "d12", "s01", "s12", "fa", "fb", "monotoneAdjust", "deltaK", "mK", "pointsLen", "alphaK", "betaK", "tauK", "squaredMagnitude", "pointCurrent", "pointAfter", "getPoint", "EPSILON", "monotoneCompute", "indexAxis", "valueAxis", "getValueAxis", "pointBefore", "iPixel", "vPixel", "splineCurveMonotone", "slopeDelta", "sign", "capControlPoint", "pt", "capBezierPoints", "inArea", "inAreaPrev", "inAreaNext", "_updateBezierControlPoints", "controlPoints", "spanGaps", "cubicInterpolationMode", "prev", "tension", "_isDomSupported", "document", "_getParentNode", "domNode", "parentNode", "host", "parseMaxStyle", "styleValue", "parentProperty", "valueInPixels", "getStyle", "el", "getComputedStyle", "getPropertyValue", "getPositionedStyle", "styles", "suffix", "pos", "positions", "getCanvasPosition", "touches", "offsetX", "offsetY", "box", "useOffsetPos", "getBoundingClientRect", "clientX", "clientY", "getRelativePosition", "event", "borderBox", "boxSizing", "paddings", "borders", "getContainerSize", "maxHeight", "container", "clientWidth", "clientHeight", "containerStyle", "containerBorder", "containerPadding", "INFINITY", "getMaximumSize", "bbWidth", "bbHeight", "aspectRatio", "margins", "containerSize", "round1", "retinaScale", "forceRatio", "forceStyle", "pixelRatio", "deviceHeight", "deviceWidth", "setTransform", "readUsedSize", "element", "_pointInLine", "p1", "p2", "_steppedInterpolation", "_bezierInterpolation", "cp1", "cp2", "c", "d", "getRtlAdapter", "rtl", "rectX", "getRightToLeftAdapter", "getLeftToRightAdapter", "overrideTextDirection", "direction", "original", "getPropertyPriority", "setProperty", "prevTextDirection", "restoreTextDirection", "propertyFn", "between", "compare", "normalize", "normalizeSegment", "getSegment", "segment", "startBound", "endBound", "_boundSegment", "inside", "subStart", "prevValue", "startIsBefore", "endIsBefore", "shouldStart", "shouldStop", "_boundSegments", "segments", "sub", "findStartAndEnd", "solidSegments", "last", "cur", "stop", "_computeSegments", "segmentOptions", "_loop", "splitByStyles", "completeLoop", "_fullLoop", "doSplitByStyles", "chartContext", "_chart", "baseStyle", "readStyle", "_datasetIndex", "prevStyle", "addStyle", "l", "st", "dir", "p0", "p0DataIndex", "p1DataIndex", "styleChanged", "backgroundColor", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "borderColor", "replacer", "uid", "toPercentage", "defined", "setsEqual", "_rlookupByKey", "_toLeftRightCenter", "_alignStartEnd", "_textX", "atEdge", "elasticIn", "elasticOut", "effects", "overrides", "Defaults", "supportsEventListenerOptions", "id", "dimension", "o", "POSITIVE_INFINITY", "ti", "requestAnimationFrame", "linear", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInSine", "easeOutSine", "easeInOutSine", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "easeOutCirc", "easeInOutCirc", "easeInElastic", "easeOutElastic", "easeInOutElastic", "easeInBack", "easeOutBack", "easeInOutBack", "easeInBounce", "easeOutBounce", "m", "easeInOutBounce", "Map", "numeric", "notation", "maxTick", "logDelta", "numDecimal", "minimumFractionDigits", "maximumFractionDigits", "logarithmic", "remain", "significand", "constructor", "_appliers", "datasets", "platform", "getDevicePixelRatio", "elements", "events", "hover", "hoverBackgroundColor", "hoverBorderColor", "hoverColor", "interaction", "intersect", "includeInvisible", "maintainAspectRatio", "onHover", "onClick", "parsing", "plugins", "responsive", "scale", "scales", "showLine", "drawActiveElementsOnTop", "targetScope", "targetName", "scopeObject", "targetScopeObject", "privateName", "defineProperties", "writable", "local", "appliers", "ownerDocument", "defaultView", "shadowRoot", "passiveSupported", "passive", "addEventListener", "removeEventListener", "setWidth", "xPlus", "leftForLtr", "itemWidth", "_itemWidth", "awaitAll", "animations", "properties", "running", "keys", "Object", "i", "length", "anim", "active", "push", "wait", "Promise", "all", "resolveTargetOptions", "target", "newOptions", "options", "$shared", "assign", "$animations", "scaleClip", "scale", "allowedOverflow", "opts", "reverse", "min", "undefined", "max", "start", "end", "defaultClip", "xScale", "yScale", "x", "y", "top", "right", "bottom", "left", "toClip", "value", "t", "r", "b", "l", "isObject", "disabled", "getSortedDatasetIndices", "chart", "filterVisible", "metasets", "_getSortedDatasetMetas", "ilen", "index", "applyStack", "stack", "dsIndex", "singleMode", "mode", "datasetIndex", "otherValue", "values", "isFinite", "sign", "convertObjectDataToArray", "data", "meta", "iScale", "vScale", "iAxisKey", "axis", "vAxisKey", "adata", "Array", "key", "isStacked", "stacked", "getStackKey", "indexScale", "valueScale", "id", "type", "getUserBounds", "minDefined", "maxDefined", "Number", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "getOrCreateStack", "stacks", "stackKey", "indexValue", "subStack", "getLastIndexInStack", "positive", "getMatchingVisibleMetas", "updateStacks", "controller", "parsed", "_cachedMeta", "_stacks", "iAxis", "vAxis", "item", "itemStacks", "_top", "_bottom", "visualValues", "_visualValues", "getFirstScaleId", "scales", "filter", "shift", "createDatasetContext", "parent", "createContext", "dataset", "createDataContext", "element", "dataIndex", "raw", "clearStacks", "items", "_parsed", "getAllScaleValues", "_cache", "$bar", "visibleMetas", "concat", "getAllParsedValues", "_arrayUnique", "sort", "a", "computeMinSampleSize", "_length", "curr", "prev", "updateMinAndPrev", "defined", "Math", "abs", "getPixelForValue", "ticks", "getPixelForTick", "computeFitCategoryTraits", "ruler", "stackCount", "thickness", "barThickness", "size", "ratio", "isNullOrUndef", "categoryPercentage", "barPercentage", "chunk", "pixels", "computeFlexCategoryTraits", "next", "percent", "parseFloatBar", "entry", "startValue", "parse", "endValue", "barStart", "barEnd", "_custom", "parseValue", "isArray", "parseArrayOrPrimitive", "count", "labels", "getLabels", "singleScale", "isFloatBar", "custom", "barSign", "actualBase", "isHorizontal", "borderProps", "horizontal", "base", "setBorderSkipped", "edge", "borderSkipped", "res", "enableBorderRadius", "parseEdge", "swap", "startEnd", "orig", "v1", "v2", "v", "setInflateAmount", "inflateAmount", "getRatioAndOffset", "rotation", "circumference", "cutout", "ratioX", "ratioY", "offsetX", "offsetY", "TAU", "startAngle", "endAngle", "startX", "cos", "startY", "sin", "endX", "endY", "calcMax", "angle", "_angleBetween", "calcMin", "maxX", "maxY", "HALF_PI", "minX", "PI", "minY", "abstract", "Error", "binarySearch", "metaset", "intersect", "_sorted", "lookupMethod", "_reversePixels", "_rlookupByKey", "_lookupByKey", "_sharedOptions", "el", "range", "getRange", "lo", "hi", "evaluateInteractionItems", "position", "handler", "getSortedVisibleDatasetMetas", "j", "skip", "getDistanceMetricForAxis", "useX", "indexOf", "useY", "pt1", "pt2", "deltaX", "deltaY", "sqrt", "pow", "getIntersectItems", "useFinalPosition", "includeInvisible", "isPointInArea", "_isPointInArea", "chartArea", "inRange", "getNearestRadialItems", "evaluationFunc", "getProps", "getAngleFromPoint", "getNearestCartesianItems", "distanceMetric", "minDistance", "center", "getCenterPoint", "distance", "getNearestItems", "getAxisItems", "rangeMethod", "intersectsItem", "filterByPosition", "array", "pos", "filterDynamicPositionByAxis", "STATIC_POSITIONS", "box", "sortByWeight", "v0", "weight", "wrapBoxes", "boxes", "layoutBoxes", "stackWeight", "buildStacks", "layouts", "wrap", "includes", "_stack", "placed", "setLayoutDims", "params", "vBoxMaxWidth", "hBoxMaxHeight", "layout", "fullSize", "factor", "width", "availableWidth", "height", "availableHeight", "buildLayoutBoxes", "centerHorizontal", "centerVertical", "leftAndTop", "rightAndBottom", "vertical", "getCombinedMax", "maxPadding", "updateMaxPadding", "boxPadding", "updateDims", "getPadding", "newWidth", "outerWidth", "newHeight", "outerHeight", "widthChanged", "w", "heightChanged", "h", "same", "other", "handleMaxPadding", "updatePos", "change", "getMargins", "marginForPositions", "positions", "margin", "forEach", "fitBoxes", "refitBoxes", "refit", "changed", "update", "setBoxDims", "placeBoxes", "userPadding", "padding", "initCanvas", "canvas", "aspectRatio", "style", "renderHeight", "getAttribute", "renderWidth", "EXPANDO_KEY", "initial", "display", "boxSizing", "isNullOrEmpty", "displayWidth", "readUsedSize", "displayHeight", "addListener", "node", "listener", "addEventListener", "eventListenerOptions", "removeListener", "removeEventListener", "fromNativeEvent", "event", "EVENT_TYPES", "getRelativePosition", "native", "nodeListContains", "nodeList", "contains", "createAttachObserver", "observer", "MutationObserver", "entries", "trigger", "addedNodes", "removedNodes", "observe", "document", "childList", "subtree", "createDetachObserver", "onWindowResize", "dpr", "window", "devicePixelRatio", "oldDevicePixelRatio", "drpListeningCharts", "resize", "currentDevicePixelRatio", "listenDevicePixelRatioChanges", "set", "unlistenDevicePixelRatioChanges", "delete", "createResizeObserver", "container", "_getParentNode", "throttled", "clientWidth", "ResizeObserver", "contentRect", "releaseObserver", "disconnect", "createProxyAndListen", "proxy", "ctx", "_detectPlatform", "_isDomSupported", "OffscreenCanvas", "BasicPlatform", "DomPlatform", "autoSkip", "tickOpts", "determinedMaxTicks", "determineMaxTicks", "ticksLimit", "maxTicksLimit", "majorIndices", "major", "enabled", "getMajorIndices", "numMajorIndices", "first", "last", "newTicks", "skipMajors", "spacing", "calculateSpacing", "avgMajorSpacing", "round", "offset", "tickLength", "_tickSize", "maxScale", "maxChart", "_maxLength", "floor", "evenMajorSpacing", "getEvenSpacing", "factors", "_factorize", "result", "ceil", "majorStart", "majorEnd", "valueOrDefault", "arr", "len", "diff", "sample", "numItems", "increment", "getPixelForGridLine", "offsetGridLines", "validIndex", "_startPixel", "_endPixel", "epsilon", "lineValue", "garbageCollect", "caches", "each", "cache", "gc", "gcLen", "splice", "getTickMarkLength", "drawTicks", "getTitleHeight", "fallback", "font", "toFont", "toPadding", "text", "lineHeight", "createScaleContext", "createTickContext", "tick", "titleAlign", "align", "ret", "_toLeftRightCenter", "reverseAlign", "titleArgs", "maxWidth", "titleX", "titleY", "_alignStartEnd", "positionAxisID", "offsetFromEdge", "registerDefaults", "scope", "parentScope", "itemDefaults", "merge", "create", "defaults", "get", "defaultRoutes", "routeDefaults", "descriptors", "describe", "routes", "property", "propertyParts", "split", "sourceName", "pop", "sourceScope", "join", "parts", "targetName", "targetScope", "route", "isIChartComponent", "proto", "allPlugins", "config", "localIds", "plugins", "registry", "getPlugin", "local", "plugin", "getOpts", "createDescriptors", "context", "getContext", "pluginOpts", "pluginScopeKeys", "scopes", "getOptionScopes", "createResolver", "scriptable", "indexable", "allKeys", "getIndexAxis", "datasetDefaults", "datasets", "indexAxis", "getAxisFromDefaultScaleID", "getDefaultScaleIDFromAxis", "idMatchesAxis", "axisFromPosition", "determineAxis", "scaleOptions", "toLowerCase", "getAxisFromDataset", "retrieveAxisFromDatasets", "boundDs", "d", "xAxisID", "yAxisID", "mergeScaleConfig", "chartDefaults", "overrides", "configScales", "chartIndexAxis", "scaleConf", "console", "error", "_proxy", "warn", "defaultId", "defaultScaleOptions", "mergeIf", "defaultID", "initOptions", "initData", "initConfig", "cachedKeys", "cacheKey", "generate", "keyCache", "keysCached", "add", "getResolver", "resolverCache", "prefixes", "Map", "cached", "resolver", "_createResolver", "subPrefixes", "p", "needContext", "names", "isScriptable", "isIndexable", "_descriptors", "prop", "isFunction", "hasFunction", "positionIsHorizontal", "KNOWN_POSITIONS", "compare2Level", "l1", "l2", "onAnimationsComplete", "animationOptions", "animation", "notifyPlugins", "callCallback", "onComplete", "onAnimationProgress", "onProgress", "getCanvas", "getElementById", "moveNumericKeys", "obj", "move", "intKey", "determineLastEvent", "e", "lastEvent", "inChartArea", "isClick", "getSizeForArea", "field", "clip", "getDatasetArea", "invalidatePlugins", "Chart", "instances", "_plugins", "invalidate", "clipArc", "pixelMargin", "outerRadius", "innerRadius", "angleMargin", "beginPath", "arc", "closePath", "toRadiusCorners", "_readValueToProps", "parseBorderRadius", "angleDelta", "o", "borderRadius", "halfThickness", "innerLimit", "computeOuterLimit", "val", "outerArcLimit", "_limitValue", "outerStart", "outerEnd", "innerStart", "innerEnd", "rThetaToXY", "theta", "pathArc", "circular", "innerR", "spacingOffset", "alpha", "noSpacingInnerRadius", "noSpacingOuterRadius", "avNogSpacingRadius", "adjustedAngle", "beta", "angleOffset", "outerStartAdjustedRadius", "outerEndAdjustedRadius", "outerStartAdjustedAngle", "outerEndAdjustedAngle", "innerStartAdjustedRadius", "innerEndAdjustedRadius", "innerStartAdjustedAngle", "innerEndAdjustedAngle", "outerMidAdjustedAngle", "pCenter", "p4", "lineTo", "innerMidAdjustedAngle", "p8", "moveTo", "outerStartX", "outerStartY", "outerEndX", "outerEndY", "drawArc", "fullCircles", "fill", "isNaN", "drawBorder", "borderWidth", "borderJoinStyle", "borderDash", "borderDashOffset", "inner", "borderAlign", "setLineDash", "lineDashOffset", "lineWidth", "lineJoin", "stroke", "setStyle", "lineCap", "borderCapStyle", "strokeStyle", "borderColor", "previous", "getLineMethod", "stepped", "_steppedLineTo", "tension", "cubicInterpolationMode", "_bezierCurveTo", "pathVars", "points", "segment", "paramsStart", "paramsEnd", "segmentStart", "segmentEnd", "outside", "loop", "pathSegment", "line", "lineMethod", "point", "fastPathSegment", "avgX", "countX", "prevX", "lastY", "pointIndex", "drawX", "truncX", "_getSegmentMethod", "_decimated", "_loop", "_getInterpolationMethod", "_steppedInterpolation", "_bezierInterpolation", "_pointInLine", "strokePathWithCache", "path", "_path", "Path2D", "strokePathDirect", "segments", "segmentMethod", "draw", "usePath2D", "radius", "hitRadius", "getBarBounds", "bar", "half", "skipOrLimit", "parseBorderWidth", "maxW", "maxH", "toTRBL", "toTRBLCorners", "maxR", "enableBorder", "topLeft", "topRight", "bottomLeft", "bottomRight", "boundingRects", "bounds", "border", "outer", "skipX", "skipY", "_isBetween", "hasRadius", "addNormalRectPath", "rect", "inflateRect", "amount", "refRect", "getBorderColor", "BORDER_COLORS", "getBackgroundColor", "BACKGROUND_COLORS", "colorizeDefaultDataset", "backgroundColor", "colorizeDoughnutDataset", "map", "colorizePolarAreaDataset", "getColorizer", "getDatasetMeta", "DoughnutController", "PolarAreaController", "containsColorsDefinitions", "k", "containsColorsDefinition", "descriptor", "lttbDecimation", "samples", "slice", "decimated", "bucketWidth", "sampledIndex", "endIndex", "maxAreaPoint", "maxArea", "area", "nextA", "avgY", "avgRangeStart", "avgRangeEnd", "avgRangeLength", "rangeOffs", "rangeTo", "pointAx", "pointAy", "minMaxDecimation", "minIndex", "maxIndex", "startIndex", "xMin", "dx", "lastIndex", "intermediateIndex1", "intermediateIndex2", "__spreadProps", "__spreadValues", "cleanDecimatedDataset", "_data", "defineProperty", "configurable", "enumerable", "writable", "cleanDecimatedData", "getStartAndCountOfVisiblePointsSimplified", "pointCount", "_segments", "tpoints", "_findSegmentEnd", "_getBounds", "source", "targetSegments", "_boundSegments", "tgt", "subBounds", "fillSources", "_boundSegment", "fillSource", "_getEdge", "_normalizeAngle", "_pointsFromSegments", "boundary", "linePoints", "fn", "_createBoundaryLine", "LineElement", "_fullLoop", "_shouldApplyFill", "_resolveTarget", "sources", "propagate", "visited", "visible", "_decodeFill", "parseFillOption", "parseFloat", "decodeTargetIndex", "firstCh", "_getTargetPixel", "pixel", "getBasePixel", "_getTargetValue", "getBaseValue", "fillOption", "_buildStackLine", "sourcePoints", "linesBelow", "getLinesBelow", "addPointsBelow", "below", "metas", "hidden", "unshift", "sourcePoint", "postponed", "findPoint", "interpolate", "pointValue", "firstValue", "lastValue", "_getTarget", "getLineByIndex", "computeBoundary", "simpleArc", "isDatasetVisible", "getPointPositionForValue", "computeCircularBoundary", "computeLinearBoundary", "grid", "getDistanceFromCenterForValue", "_drawfill", "lineOpts", "color", "above", "clipArea", "doFill", "unclipArea", "cfg", "save", "clipVertical", "restore", "clipY", "lineLoop", "firstPoint", "lastPoint", "src", "notShape", "fillStyle", "clipBounds", "interpolatedLineTo", "targetLoop", "interpolatedPoint", "calculateItemSize", "boxWidth", "labelFont", "legendItem", "_itemHeight", "itemWidth", "calculateItemWidth", "itemHeight", "calculateItemHeight", "legendItemText", "reduce", "measureText", "fontLineHeight", "calculateLegendItemHeight", "labelHeight", "isListened", "onHover", "onLeave", "onClick", "createTitle", "titleOpts", "title", "Title", "configure", "addBox", "titleBlock", "pushOrConcat", "toPush", "prototype", "apply", "splitNewlines", "str", "String", "createTooltipItem", "label", "getLabelAndValue", "getParsed", "formattedValue", "getDataset", "getTooltipSize", "tooltip", "body", "footer", "boxHeight", "bodyFont", "titleFont", "footerFont", "titleLineCount", "footerLineCount", "bodyLineItemCount", "combinedBodyLength", "bodyItem", "before", "lines", "after", "beforeBody", "afterBody", "titleSpacing", "titleMarginBottom", "bodyLineHeight", "displayColors", "bodySpacing", "footerMarginTop", "footerSpacing", "widthPadding", "maxLineWidth", "string", "determineYAlign", "doesNotFitWithAlign", "xAlign", "caret", "caretSize", "caretPadding", "determineXAlign", "yAlign", "chartWidth", "determineAlignment", "alignX", "alignY", "paddingAndSize", "getBackgroundPoint", "alignment", "cornerRadius", "getAlignedX", "getBeforeAfterBodyLines", "callback", "createTooltipContext", "tooltipItems", "overrideCallbacks", "callbacks", "override", "invokeCallbackWithFallback", "name", "arg", "call", "defaultCallbacks", "findOrAddLabel", "addedLabels", "addIfString", "lastIndexOf", "_getLabelForValue", "generateTicks", "generationOptions", "dataRange", "step", "precision", "maxTicks", "maxDigits", "includeBounds", "unit", "maxSpaces", "rmin", "rmax", "countDefined", "minSpacing", "niceNum", "niceMin", "niceMax", "numSpaces", "MIN_SPACING", "almostWhole", "almostEquals", "decimalPlaces", "_decimalPlaces", "relativeLabelSize", "tickValue", "minRotation", "rad", "toRadians", "isMajor", "tickVal", "log10Floor", "steps", "rangeExp", "rangeStep", "startExp", "finiteOrDefault", "minExp", "exp", "stepSize", "significand", "lastTick", "getTickBackdropHeight", "backdropPadding", "measureLabelSize", "_longestText", "determineLimits", "fitWithPointLabels", "_padding", "limits", "labelSizes", "valueCount", "_pointLabels", "pointLabelOpts", "pointLabels", "additionalAngle", "centerPointLabels", "setContext", "getPointLabelContext", "pointPosition", "getPointPosition", "drawingArea", "plFont", "textSize", "angleRadians", "getIndexAngle", "toDegrees", "hLimits", "vLimits", "updateLimits", "setCenterPoint", "_pointLabelItems", "buildPointLabelItems", "createPointLabelItem", "itemOpts", "outerDistance", "extra", "pointLabelPosition", "yForAngle", "textAlign", "getTextAlignForAngle", "leftForTextAlign", "isNotOverlapped", "drawPointLabelBox", "backdropColor", "backdropLeft", "backdropTop", "backdropWidth", "backdropHeight", "some", "addRoundedRectPath", "fillRect", "drawPointLabels", "labelCount", "optsAtIndex", "renderText", "textBaseline", "pathRadiusLine", "xCenter", "yCenter", "drawRadiusLine", "gridLineOpts", "borderOpts", "dash", "dashOffset", "createPointLabelContext", "sorter", "input", "adapter", "_adapter", "parser", "isoWeekday", "_parseOpts", "isNumber", "startOf", "determineUnitForAutoTicks", "minUnit", "capacity", "UNITS", "interval", "INTERVALS", "MAX_SAFE_INTEGER", "common", "determineUnitForFormatting", "numTicks", "determineMajorUnit", "addTick", "time", "timestamps", "_lookup", "timestamp", "setMajorTicks", "majorUnit", "ticksFromTimestamps", "table", "prevSource", "nextSource", "prevTarget", "nextTarget", "span", "Animator", "animator", "transparent", "interpolators", "Animation", "Animations", "isDirectUpdateMode", "cloneIfNotShared", "createStack", "DatasetController", "BarController", "BubbleController", "LineController", "PieController", "RadarController", "ScatterController", "DateAdapterBase", "adapters", "Interaction", "BasePlatform", "Element", "getTicksLimit", "Scale", "TypedRegistry", "Registry", "PluginService", "addIfFound", "Config", "getChart", "ArcElement", "PointElement", "BarElement", "plugin_colors", "plugin_decimation", "getBoxSize", "itemsEqual", "Legend", "plugin_legend", "plugin_title", "plugin_subtitle", "positioners", "Tooltip", "plugin_tooltip", "CategoryScale", "LinearScaleBase", "LinearScale", "changeExponent", "LogarithmicScale", "RadialLinearScale", "TimeScale", "TimeSeriesScale", "registerables", "constructor", "_request", "_charts", "_running", "_lastDate", "_notify", "anims", "date", "listeners", "numSteps", "duration", "currentStep", "_refresh", "requestAnimFrame", "_update", "Date", "now", "remaining", "_active", "_total", "_getAnims", "charts", "complete", "progress", "listen", "cb", "has", "acc", "cur", "_duration", "stop", "cancel", "remove", "boolean", "from", "to", "c0", "helpersColor", "c1", "valid", "mix", "hexString", "number", "currentValue", "resolve", "_fn", "_easing", "effects", "easing", "linear", "_start", "delay", "_target", "_prop", "_from", "_to", "_promises", "elapsed", "remain", "promises", "rej", "resolved", "method", "_chart", "_properties", "animatedProps", "getOwnPropertyNames", "option", "_animateOptions", "_createAnimations", "then", "props", "charAt", "shared", "canStack", "_stacked", "_ctx", "_cachedDataOpts", "getMeta", "_type", "_parsing", "_objectData", "_drawStart", "_drawCount", "enableOptionSharing", "supportsDecimation", "$context", "_syncList", "datasetElementType", "dataElementType", "initialize", "linkScales", "addElements", "isPluginEnabled", "updateIndex", "chooseId", "xid", "yid", "rid", "rAxisID", "iid", "iAxisID", "vid", "vAxisID", "getScaleForId", "rScale", "scaleID", "_getOtherScale", "reset", "_destroy", "unlistenArrayEvents", "_dataCheck", "isExtensible", "listenArrayEvents", "buildOrUpdateElements", "resetNewElements", "stackChanged", "oldStacked", "_resyncElements", "scopeKeys", "datasetScopeKeys", "parsing", "sorted", "parseArrayData", "parseObjectData", "parsePrimitiveData", "isNotInOrderComparedToPrev", "xAxisKey", "yAxisKey", "resolveObjectKey", "getDataElement", "updateRangeFromParsed", "parsedValue", "NaN", "getMinMax", "otherScale", "otherMin", "otherMax", "_skip", "getMaxOverflow", "getLabelForValue", "_clip", "elements", "drawActiveElementsOnTop", "getStyle", "resolveDatasetElementOptions", "resolveDataElementOptions", "_resolveElementOptions", "elementType", "sharing", "datasetElementScopeKeys", "resolveNamedOptions", "freeze", "_resolveAnimations", "transition", "datasetAnimationScopeKeys", "_cacheable", "getSharedOptions", "includeOptions", "sharedOptions", "_animationsDisabled", "_getSharedOptions", "firstOpts", "previouslySharedOptions", "updateSharedOptions", "updateElement", "_setStyle", "removeHoverStyle", "setHoverStyle", "_removeDatasetHoverStyle", "_setDatasetHoverStyle", "arg1", "arg2", "numMeta", "numData", "_insertElements", "_removeElements", "updateElements", "removed", "_sync", "args", "_dataChanges", "_onDataPush", "arguments", "_onDataPop", "_onDataShift", "_onDataSplice", "newCount", "_onDataUnshift", "__publicField", "bars", "_getRuler", "vpixels", "head", "_calculateBarValuePixels", "ipixels", "_calculateBarIndexPixels", "_getStacks", "grouped", "skipNull", "_getStackCount", "_getStackIndex", "baseValue", "minBarLength", "floating", "getDataVisibility", "startPixel", "getPixelForDecimal", "endPixel", "getValueForPixel", "halfGrid", "getLineWidthForValue", "maxBarThickness", "Infinity", "stackIndex", "rects", "numbers", "_index_", "_value_", "beginAtZero", "iPixel", "vPixel", "getter", "_getRotation", "_getCircumference", "_getRotationExtents", "arcs", "getMaxBorderWidth", "getMaxOffset", "maxSize", "toPercentage", "chartWeight", "_getRingWeight", "maxHeight", "maxRadius", "toDimension", "radiusLength", "_getVisibleDatasetWeightTotal", "total", "calculateTotal", "_getRingWeightOffset", "_circumference", "animateRotate", "calculateCircumference", "animationOpts", "centerX", "centerY", "animateScale", "metaData", "formatNumber", "locale", "hoverBorderWidth", "hoverOffset", "ringWeightOffset", "_scriptable", "_indexable", "startsWith", "legend", "generateLabels", "pointStyle", "fontColor", "toggleDataVisibility", "_dataset", "animationsDisabled", "_getStartAndCountOfVisiblePoints", "_scaleRangesChanged", "_datasetIndex", "showLine", "animated", "spanGaps", "maxGapLength", "directUpdate", "pointsCount", "prevParsed", "nullData", "updateControlPoints", "_parseObjectDataRadialScale", "bind", "_updateRadius", "minSize", "cutoutPercentage", "getVisibleDatasetCount", "datasetStartAngle", "defaultAngle", "countVisibleElements", "_computeAngle", "angleLines", "getElement", "interaction", "members", "init", "formats", "format", "endOf", "_date", "modes", "nearest", "_layers", "z", "removeBox", "layoutItem", "minPadding", "verticalBoxes", "horizontalBoxes", "beforeLayout", "visibleVerticalBoxCount", "acquireContext", "releaseContext", "getDevicePixelRatio", "getMaximumSize", "isAttached", "updateConfig", "touchstart", "touchmove", "touchend", "pointerenter", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointerout", "supportsEventListenerOptions", "passive", "removeAttribute", "setAttribute", "proxies", "$proxies", "attach", "detach", "isConnected", "tooltipPosition", "hasValue", "final", "ticksLength", "_margins", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "labelRotation", "_range", "_gridLineItems", "_labelItems", "_labelSizes", "_longestTextCache", "_userMax", "_userMin", "_suggestedMax", "_suggestedMin", "_ticksLength", "_borderValue", "_dataLimitsCached", "suggestedMin", "suggestedMax", "getTicks", "xLabels", "yLabels", "getLabelItems", "_computeLabelItems", "beforeUpdate", "margins", "grace", "sampleSize", "beforeSetDimensions", "setDimensions", "afterSetDimensions", "beforeDataLimits", "determineDataLimits", "afterDataLimits", "_addGrace", "beforeBuildTicks", "buildTicks", "afterBuildTicks", "samplingEnabled", "_convertTicksToLabels", "beforeCalculateLabelRotation", "calculateLabelRotation", "afterCalculateLabelRotation", "afterAutoSkip", "beforeFit", "fit", "afterFit", "afterUpdate", "reversePixels", "_alignToPixels", "alignToPixels", "_callHooks", "beforeTickToLabelConversion", "generateTickLabels", "afterTickToLabelConversion", "maxRotation", "tickWidth", "maxLabelDiagonal", "_isVisible", "_getLabelSizes", "maxLabelWidth", "widest", "maxLabelHeight", "highest", "asin", "gridOpts", "titleHeight", "tickPadding", "mirror", "labelWidth", "_calculatePadding", "_handleMargins", "isRotated", "labelsBelowTicks", "offsetLeft", "offsetRight", "isFullSize", "_computeLabelSizes", "widths", "heights", "widestLabelSize", "highestLabelSize", "jlen", "tickFont", "fontString", "nestedLabel", "_resolveTickFontOptions", "_measureText", "valueAt", "idx", "decimal", "_int16Range", "_alignPixel", "getDecimalForPixel", "optionTicks", "rot", "autoSkipPadding", "_computeGridLineItems", "tl", "axisWidth", "axisHalfWidth", "alignBorderValue", "borderValue", "alignedLineValue", "tx1", "ty1", "tx2", "ty2", "x1", "y1", "x2", "y2", "limit", "optsAtIndexBorder", "lineColor", "tickColor", "tickBorderDash", "tickBorderDashOffset", "crossAlign", "tickAndPadding", "hTickAndPadding", "lineCount", "textOffset", "_getXAxisLabelAlignment", "_getYAxisLabelAlignment", "labelOffset", "halfCount", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "tickTextAlign", "showLabelBackdrop", "backdrop", "labelPadding", "translation", "_computeLabelArea", "drawBackground", "findIndex", "drawGrid", "drawLine", "p1", "p2", "drawOnChartArea", "lastLineWidth", "drawLabels", "renderTextOptions", "drawTitle", "tz", "gz", "bz", "axisID", "_maxDigits", "fontSize", "isForType", "isPrototypeOf", "register", "getPrototypeOf", "unregister", "controllers", "_typedRegistries", "_each", "addControllers", "addPlugins", "addScales", "getController", "_get", "getScale", "removeControllers", "removeElements", "removePlugins", "removeScales", "typedRegistry", "reg", "_getRegistryForType", "_exec", "itemReg", "component", "camelMethod", "_capitalize", "_init", "notify", "hook", "_createDescriptors", "cancelable", "_oldCache", "_notifyStateChanges", "previousDescriptors", "Set", "_config", "_scopeCache", "_resolverCache", "platform", "clearCache", "clear", "datasetType", "additionalOptionScopes", "_cachedScopes", "mainScope", "resetCache", "keyLists", "chartOptionScopes", "subResolver", "_attachContext", "descriptorDefaults", "c", "userConfig", "initialCanvas", "existingChart", "uid", "_options", "_aspectRatio", "_metasets", "_lastEvent", "_listeners", "_responsiveListeners", "_sortedMetasets", "_hiddenIndices", "attached", "_doResize", "debounce", "resizeDelay", "_initialize", "maintainAspectRatio", "responsive", "retinaScale", "bindEvents", "clearCanvas", "_resizeBeforeDraw", "_resize", "newSize", "newRatio", "onResize", "render", "ensureScalesHaveIDs", "scalesOptions", "axisOptions", "buildOrUpdateScales", "scaleOpts", "updated", "isRadial", "dposition", "dtype", "scaleType", "scaleClass", "hasUpdated", "_updateMetasets", "_destroyDatasetMeta", "_removeUnreferencedMetasets", "buildOrUpdateControllers", "newControllers", "order", "ControllerClass", "_resetElements", "animsDisabled", "_updateScales", "_checkEventBindings", "_updateHiddenIndices", "_minPadding", "autoPadding", "_updateLayout", "_updateDatasets", "_eventHandler", "_updateHoverStyles", "existingEvents", "newEvents", "events", "setsEqual", "unbindEvents", "changes", "_getUniformDataChanges", "datasetCount", "makeSet", "changeSet", "noArea", "_idx", "_updateDataset", "layers", "_drawDatasets", "_drawDataset", "useClip", "getElementsAtEventForMode", "setDatasetVisibility", "_updateVisibility", "hide", "show", "_stop", "destroy", "toBase64Image", "toDataURL", "bindUserEvents", "bindResponsiveEvents", "_add", "_remove", "detached", "updateHoverStyle", "prefix", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "_elementsEqual", "pluginId", "replay", "hoverOptions", "hover", "deactivated", "activated", "eventFilter", "_handleEvent", "_getActiveElements", "_isClickEvent", "version", "chartX", "chartY", "rAdjust", "betweenAngles", "withinRadius", "halfAngle", "halfRadius", "translate", "fix", "radiusOffset", "_points", "_pointsUpdated", "_updateBezierControlPoints", "_computeSegments", "_interpolate", "interpolated", "capBezierPoints", "mouseX", "mouseY", "inXRange", "inYRange", "hoverRadius", "drawPoint", "addRectPath", "replace", "forceOverride", "_args", "chartOptions", "colorizer", "algorithm", "beforeElementsUpdate", "xAxis", "threshold", "afterDatasetsUpdate", "$filler", "beforeDraw", "drawTime", "beforeDatasetsDraw", "beforeDatasetDraw", "labelOpts", "usePointStyle", "pointStyleWidth", "_added", "legendHitBoxes", "_hoveredItem", "doughnutMode", "legendItems", "columnSizes", "lineWidths", "buildLabels", "_computeTitleHeight", "_fitRows", "_fitCols", "hitboxes", "totalHeight", "row", "heightLimit", "totalWidth", "currentColWidth", "currentColHeight", "col", "adjustHitBoxes", "rtl", "rtlHelper", "getRtlAdapter", "hitbox", "leftForLtr", "_draw", "defaultColor", "halfFontSize", "cursor", "drawLegendBox", "lineDash", "drawOptions", "SQRT2", "xPlus", "drawPointLegend", "yBoxTop", "xBoxLeft", "fillText", "strikethrough", "overrideTextDirection", "textDirection", "textWidth", "setWidth", "realX", "_textX", "restoreTextDirection", "titlePadding", "topPaddingPlusHalfFontSize", "_getLegendItemAt", "hitBox", "lh", "handleEvent", "hoveredItem", "sameItem", "_element", "afterEvent", "ci", "useBorderRadius", "_drawArgs", "fontOpts", "WeakMap", "average", "xSet", "eventPosition", "nearestElement", "distanceBetweenPoints", "tp", "beforeTitle", "noop", "afterTitle", "beforeLabel", "tooltipItem", "labelColor", "labelTextColor", "bodyColor", "labelPointStyle", "afterLabel", "beforeFooter", "afterFooter", "opacity", "_eventPosition", "_size", "_cachedAnimations", "_tooltipItems", "dataPoints", "caretX", "caretY", "labelColors", "labelPointStyles", "labelTextColors", "getTitle", "getBeforeBody", "getBody", "bodyItems", "scoped", "getAfterBody", "getFooter", "_createItems", "itemSort", "positionAndSize", "backgroundPoint", "external", "drawCaret", "tooltipPoint", "caretPosition", "getCaretPosition", "x3", "y3", "ptX", "ptY", "pt", "titleColor", "_drawColorBox", "colorX", "rtlColorX", "yOffSet", "colorY", "multiKeyBackground", "outerX", "innerX", "strokeRect", "drawBody", "bodyAlign", "xLinePadding", "fillLineOfText", "bodyAlignForCalculation", "textColor", "drawFooter", "footerAlign", "footerColor", "tooltipSize", "quadraticCurveTo", "_updateAnimationTarget", "animX", "animY", "_willRender", "hasTooltipContent", "globalAlpha", "positionChanged", "_positionChanged", "_ignoreReplayEvents", "afterInit", "afterDraw", "_fallback", "_startValue", "_valueRange", "_addedLabels", "added", "_endValue", "handleTickRangeOptions", "setMin", "setMax", "minSign", "maxSign", "getTickLimit", "computeTickLimit", "numericGeneratorOptions", "_setMinAndMaxByKey", "Ticks", "formatters", "numeric", "log10", "m", "_zero", "logarithmic", "leftMovement", "rightMovement", "topMovement", "bottomMovement", "angleMultiplier", "scalingFactor", "getValueForDistanceFromCenter", "scaledDistance", "pointLabel", "distanceFromCenter", "getBasePosition", "getPointLabelPosition", "rotate", "animate", "millisecond", "second", "minute", "hour", "day", "week", "month", "quarter", "year", "_unit", "_majorUnit", "_offsets", "_normalized", "displayFormats", "normalized", "_applyBounds", "_getLabelBounds", "getLabelTimestamps", "timeOpts", "_generate", "_filterBetween", "_getLabelCapacity", "initOffsets", "offsetAfterAutoskip", "getDecimalForValue", "minor", "weekday", "hasWeekday", "getDataTimestamps", "tooltipFormat", "datetime", "fmt", "_tickFormatFunction", "formatter", "minorFormat", "majorFormat", "offsets", "_getLabelSize", "ticksOpts", "tickLabelWidth", "cosRotation", "sinRotation", "tickFontSize", "exampleTime", "exampleLabel", "normalize", "_table", "_minPos", "_tableRange", "_getTimestampsForTable", "buildLookupTable", "init_auto", "__esmMin", "init_chart", "Chart", "registerables", "require_test_logic", "__commonJSMin", "exports", "init_common", "init_auto", "shuffleArray", "array", "i", "j", "pad2", "number", "isBestTest", "wpm", "accuracy", "userTests", "tests", "test", "isLoggedIn", "user", "__async", "toast_success", "TypingTest", "id", "stopwatchId", "restartButtonId", "updateSoundPath", "audio", "soundPath", "soundVolume", "error", "now", "time", "formattedTime", "totalSeconds", "correctChars", "totalTypedChars", "missingChars", "originalWordLength", "typedWord", "originalLetter", "typedLetter", "totalChars", "quotes", "word", "wordInd", "out", "character", "_a", "newTextBoxHTML", "k", "cacheName", "url", "response", "cache", "cachedResponse", "data", "randomIndex", "randomQuote", "wordsArray", "lastTypedRect", "testContainerComputedStyles", "testContainerPaddingLeft", "testContainerPaddingTop", "pathToTestMap", "getSettings", "sendResultsToDatabase", "username", "getUser", "e", "storeUserDetails", "userDetails", "fetchUserDetails", "updateUserDetails", "localUserDetails", "userGraphChart", "displayStats", "graph", "wpm_last_ten", "accuracy_last_ten", "last_10_tests", "sum_words", "sum_accuracy", "all_sum_words", "all_sum_accuracy", "ctx", "Chart", "justRegistered", "introductionModal", "closeModal", "startTyping", "currentTestConfig", "elementId", "currentTest", "event"]
}
